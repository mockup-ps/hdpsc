{"version":3,"sources":["supabase.js","views/pages/Viavalen/actionComponent.js","views/pages/Viavalen/Viavalen.js"],"names":["supabase","createClient","process","ViewOnly","className","class","ViewAndCAP","props","useState","modal","setModal","item","setItem","arrResponsible","useSelector","state","simView","useEffect","a","from","select","eq","datadetensi","id_detensi","td_deficiency","data","error","sementara","map","x","id_deficiency","responsiblero","console","log","size","show","onClose","addTableClasses","items","fields","key","label","scopedSlots","index","value","actiontaken","onClick","color","Edit","history","useHistory","dispatch","useDispatch","push","type","Viavalen","arrView","setData","details","setDetails","arrWarna","field","setField","handleChange","e","target","name","validasiDuplikat","imokapal","tgldetensi","JSON","stringify","td_detensi","length","Swal","fire","icon","title","text","initial","html","timer","timerProgressBar","then","result","detensi","urstatus","datas","tr_status","th_detensi","md","onChange","_style","width","position","indexOf","newDetails","slice","splice","toggleDetails","role","parseInt","kd_status","ur_status","includes","histori","date","Date","created_at","hari","getDate","bulan","getMonth","tahun","getFullYear","jam","getHours","menit","getMinutes","detik","getSeconds","style","minWidth","toString","createdby"],"mappings":"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","file":"static/js/47.f99cdeb6.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = 'https://ctvjpxocqeajngziaxji.supabase.co'\r\nconst supabaseKey = process.env.REACT_APP_SUPABASE_KEY\r\nconst supabase = createClient(supabaseUrl, supabaseKey)\r\n\r\nexport default supabase","import { CButton, CDataTable, CModal, CModalBody, CModalFooter, CModalHeader, CTextarea, CSelect} from '@coreui/react'\r\nimport {React, useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport supabase from '../../../supabase'\r\n\r\nconst ViewOnly = () =>{\r\n    return(\r\n        <div className=\"d-flex flex-row justify-content-center\">\r\n            <div>\r\n                <CButton className=\"btn btn-sm btn-success\">\r\n                    <i class=\"fas fa-eye\"></i>\r\n                </CButton>                                 \r\n            </div>                                  \r\n        </div>          \r\n    )\r\n}\r\n\r\nconst ViewAndMonitor = (props) =>{\r\n    const simView = useSelector((state)=>state.simView)\r\n    const [modal, setModal] = useState(false)\r\n    const [item, setItem] = useState([])\r\n    useEffect(async () => {\r\n        let { data: td_deficiency, error } = await supabase\r\n        .from('td_deficiency')\r\n        .select(`\r\n        data, \r\n        actionplan\r\n        `)\r\n        .eq('id_detensi', props.datadetensi.id_detensi)\r\n        .eq('data->responsiblero', JSON.stringify(simView))  \r\n        let sementara = td_deficiency.map((x)=>{\r\n            return(\r\n                {...x.data, ['actionplan']:x.actionplan}\r\n            )\r\n        })\r\n        console.log(sementara)\r\n        setItem(sementara)     \r\n      },[]);    \r\n    return(\r\n        <>\r\n        <CModal\r\n        show={modal}\r\n        onClose={()=>setModal(false)}\r\n        size=\"xl\"\r\n        >\r\n            <CModalHeader>\r\n                <h5>Monitoring Detensi Kapal {props.datadetensi.namakapal} </h5>\r\n            </CModalHeader>\r\n            <CModalBody>\r\n                <CDataTable\r\n                addTableClasses=\"josss\"\r\n                items={item}\r\n                fields={[\r\n                    {key:'no', label:'No'},\r\n                    {key:'natureofdeficiency', label:'Nature of Deficiency'},\r\n                    {key:'actionplan', label:'Action Plan'},\r\n                    {key:'action', label:'Action'},\r\n                ]}\r\n                scopedSlots={{\r\n                    'no':\r\n                    (item, index)=>{\r\n                        return(\r\n                            <td>\r\n                                {index+1}\r\n                            </td>\r\n                        )\r\n                    },\r\n                    'action':\r\n                    (item, index)=>{\r\n                        return(\r\n                            <td>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <div className=\"mr-2\">\r\n                                        <CButton className=\"btn btn-sm btn-success\">Setujui</CButton>\r\n                                    </div>\r\n                                    <div className=\"mr-2\">\r\n                                        <CButton className=\"btn btn-sm btn-danger\">Tolak</CButton>\r\n                                    </div>                                    \r\n                                </div>\r\n                            </td>\r\n                        )\r\n                    }\r\n                }}\r\n                />\r\n            </CModalBody>\r\n        </CModal>\r\n        <div className=\"d-flex flex-row justify-content-center\">\r\n            <div className=\"mr-2\">\r\n                <CButton className=\"btn btn-sm btn-success\">\r\n                    <i class=\"fas fa-eye\"></i>\r\n                </CButton>                                     \r\n            </div>  \r\n            <div>\r\n                <CButton onClick={()=>setModal(true)} className=\"btn btn-sm btn-warning\">\r\n                    <i class=\"fas fa-desktop\"></i>\r\n                </CButton>                                     \r\n            </div>                                   \r\n        </div>   \r\n        </>      \r\n    )\r\n}\r\n\r\nconst ViewAndCAP = (props) =>{\r\n    const [modal, setModal] = useState(false)\r\n    const [item, setItem] = useState([])\r\n    const simView = useSelector((state)=>state.simView)\r\n    const arrResponsible = [\"Dit. KPLP\", \"Dit. KAPEL\", \"BKI\", \"Kemenlu\"]\r\n    const [actionplan, setActionplan] = useState()\r\n    const handleChange= (e) => {\r\n        setActionplan(e.target.value)\r\n    }\r\n    const handleSimpan = async () =>{\r\n        const { data, error } = await supabase\r\n        .from('td_detensi')\r\n        .update({ actionplan: actionplan })\r\n        .eq('id_detensi', 'someValue')        \r\n    }\r\n    // const history = useHistory()\r\n    // const dispatch = useDispatch()\r\n    // const handleCAP = () =>{\r\n    //     history.push('/hdpsc/edit')\r\n    //     dispatch({type:'set', datadetensi:props.datadetensi})\r\n    // }   \r\n    useEffect(async () => {\r\n        let { data: td_deficiency, error } = await supabase\r\n        .from('td_deficiency')\r\n        .select(`\r\n        data, \r\n        id_deficiency\r\n        `)\r\n        .eq('id_detensi', props.datadetensi.id_detensi)\r\n        // .eq('data->responsiblero', simView)  \r\n        let sementara = td_deficiency.map((x)=>{\r\n            return(\r\n                {...x.data, ['id_deficiency']:x.id_deficiency, ['responsiblero']:arrResponsible[x.data.responsiblero - 1]}\r\n            )\r\n        })\r\n        setItem(sementara)  \r\n        console.log(sementara)    \r\n      },[]);        \r\n    return(\r\n        <>\r\n        <CModal\r\n        size=\"xl\"\r\n        show={modal}\r\n        onClose ={()=>setModal(false)}\r\n        >\r\n            <CModalHeader>\r\n                <h5><i>Correction Action Plan</i></h5>\r\n            </CModalHeader>\r\n            <CModalBody>\r\n                <div className=\"mt-3\">\r\n                    <CDataTable\r\n                    addTableClasses=\"josss\"\r\n                    items={item}\r\n                    fields={[\r\n                        {key:\"no\", label:\"No\"},\r\n                        {key:\"natureofdeficiency\", label:\"Nature of Deficiency\"},\r\n                        {key:\"actiontaken\", label:\"Code\"},\r\n                        // {key:\"responsiblero\", label:\"Responsible RO\"}, \r\n                        {key:\"issuingauthority\", label:\"Issuing Authority\"},                        \r\n                        {key:\"actionplan\", label:\"Action Plan\"},\r\n                        {key:\"result\", label:\"Result\"},\r\n                        {key:\"remark\", label:\"Remarks\"},\r\n                        {key:\"doc\", label:\"Documentation\"}\r\n                    ]}\r\n                    scopedSlots={{\r\n                        'doc':\r\n                        (item, index)=>{\r\n                            return(\r\n                                <td>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <CButton className=\"btn btn-success btn-sm\"><i class=\"far fa-file\"></i></CButton>                                        \r\n                                    </div>\r\n                                </td>\r\n                            )\r\n                        },\r\n                        'result':\r\n                        (item, index)=>{\r\n                            return(\r\n                                <td>\r\n                                    <CTextarea></CTextarea>\r\n                                </td>\r\n                            )\r\n                        },\r\n                        'remark':\r\n                        (item, index)=>{\r\n                                return(\r\n                                    <td>\r\n                                        <CSelect>\r\n                                            <option value=\"0\">NOT CLOSED</option>\r\n                                            <option value=\"1\">CLOSED</option>\r\n                                        </CSelect>\r\n                                    </td>\r\n                                )\r\n                        },\r\n                        'actiontaken':\r\n                        (item, index)=>{\r\n                            return(\r\n                                <td>\r\n                                    {item.actiontaken.value}\r\n                                </td>\r\n                            )\r\n                        },\r\n                        'responsiblero':\r\n                        (item, index) =>{\r\n                            console.log(item)\r\n                            return(\r\n                                <td>\r\n                                    {\r\n                                        item.responsiblero ?\r\n                                        \"Yes\"\r\n                                        :\r\n                                        \"No\"\r\n                                    }\r\n                                </td>\r\n                            )\r\n                        },\r\n                        'no':\r\n                        (item, index)=>{\r\n                            return(\r\n                                <td>\r\n                                    {index+1}\r\n                                </td>\r\n                            )\r\n                        },\r\n                        'actionplan':\r\n                        (item, index)=>{\r\n                            return(\r\n                                <td>\r\n                                    <CTextarea></CTextarea>\r\n                                </td>\r\n                            )\r\n                        }\r\n                    }}\r\n                    />\r\n                </div>\r\n            </CModalBody>\r\n            <CModalFooter>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <div className=\"mr-2\">\r\n                        <CButton onClick={()=>setModal(false)} color=\"success\">Simpan</CButton>\r\n                    </div>\r\n                    <div className=\"mr-2\">\r\n                        <CButton onClick={()=>setModal(false)} color=\"danger\">Batal</CButton>\r\n                    </div>                    \r\n                </div>\r\n            </CModalFooter>\r\n        </CModal>\r\n        <div className=\"d-flex flex-row justify-content-center\">\r\n            {/* <div className=\"mr-2\">\r\n                <CButton className=\"btn btn-sm btn-success\">\r\n                    <i class=\"fas fa-eye\"></i>\r\n                </CButton>                                     \r\n            </div>   */}\r\n            <div>\r\n                <CButton onClick={()=>setModal(true)} className=\"btn btn-sm btn-info\">\r\n                    <i class=\"fas fa-wrench\"></i>\r\n                </CButton>                                     \r\n            </div>                                   \r\n        </div> \r\n        </>       \r\n    )\r\n}\r\n\r\nconst Edit = (props) =>{\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const handleEdit = () =>{\r\n        history.push('/hdpsc/edit')\r\n        dispatch({type:'set', datadetensi:props.datadetensi})\r\n    }     \r\n    return(\r\n        <div className=\"d-flex flex-row justify-content-center\">\r\n            {/* <div className=\"mr-2\">\r\n                <CButton className=\"btn btn-sm btn-success\">\r\n                    <i class=\"fas fa-eye\"></i>\r\n                </CButton>                                     \r\n            </div>   */}\r\n            <div>\r\n                <CButton onClick={()=>handleEdit()} className=\"btn btn-sm btn-warning\">\r\n                    <i class=\"fas fa-pencil-alt\"></i>\r\n                </CButton>                                     \r\n            </div>                                   \r\n        </div>          \r\n    )\r\n}\r\n\r\nexport {ViewOnly, Edit, ViewAndCAP, ViewAndMonitor}","import { CCardHeader, CCard, CCardBody, CDataTable, CBadge, CButton, CCollapse, CCol, CRow, CModal, CModalHeader, CModalBody, CModalFooter, CFormGroup, CLabel, CInput, CSelect } from '@coreui/react'\r\nimport {React, useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport supabase from '../../../supabase'\r\nimport {Edit, ViewOnly, ViewAndCAP, ViewAndMonitor} from './actionComponent'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Swal from 'sweetalert2'\r\n\r\nconst Viavalen = () =>{\r\n    const dispatch = useDispatch()\r\n    const arrView = [\"Direktorat KPLP\", \"Direktorat KAPEL\", \"BKI\",\"Kemenlu\", \"Kemenkomarves\"] \r\n    let history = useHistory()\r\n    const [data, setData] = useState([])\r\n    const [details, setDetails] = useState([])\r\n    const arrWarna = [\"success\",\"primary\",\"warning\",\"info\"]\r\n    const [modal, setModal] = useState(false)\r\n    const simView = useSelector((state)=>state.simView)\r\n    const [field, setField] = useState({})\r\n    const handleChange = (e) =>{\r\n        setField({...field, [e.target.name]:e.target.value})\r\n    }\r\n    const validasiDuplikat = async () =>{\r\n        if (field.imokapal && field.tgldetensi){\r\n            let { data: td_detensi, error } = await supabase\r\n            .from('td_detensi')\r\n            .select(\"*\")\r\n            .eq('data->imokapal', JSON.stringify(field.imokapal))\r\n            .eq('data->tgldetensi', JSON.stringify(field.tgldetensi))\r\n            if (td_detensi.length){\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Data Detensi tersebut Sudah Pernah Diajukan Sebelumnya'\r\n                  })\r\n            } else {\r\n                let initial = {}\r\n                initial.imokapal = field.imokapal\r\n                initial.tgldetensi = field.tgldetensi\r\n                dispatch({type:'set', initial: initial})               \r\n                Swal.fire({\r\n                  icon: 'success',                    \r\n                  title: 'Validasi Sukses',\r\n                  html: 'Anda Akan Diarahkan ke Halaman Selanjutnya',\r\n                  timer: 1500,\r\n                  timerProgressBar: true\r\n                }).then((result) => {\r\n                    history.push('/hdpsc/new')\r\n                })                \r\n            }           \r\n        } else {\r\n            console.log(field.imokapal, field.tgldetensi)\r\n        }\r\n    }\r\n    const toggleDetails = (index) => {\r\n        const position = details.indexOf(index)\r\n        let newDetails = details.slice()\r\n        if (position !== -1) {\r\n          newDetails.splice(position, 1)\r\n        } else {\r\n          newDetails = [...details, index]\r\n        }\r\n        setDetails(newDetails)\r\n      } \r\n    useEffect(async () => {\r\n        const detensi = await supabase\r\n        .from('td_detensi')\r\n        .select(`\r\n            id_detensi,\r\n            data,\r\n            tr_status (\r\n                kd_status,\r\n                ur_status\r\n            ),\r\n            th_detensi (\r\n                kd_status,\r\n                created_at,\r\n                createdby\r\n            )\r\n        `)          \r\n        const urstatus = await supabase\r\n        .from('tr_status')\r\n        .select(`\r\n            kd_status,\r\n            ur_status\r\n        `)         \r\n        let datas = detensi.data.map(x=>{\r\n            return(\r\n                {['id_detensi']:x.id_detensi, ...x.data, ...x.tr_status, ['histori']:x.th_detensi}\r\n            )\r\n        })\r\n        setData(datas)   \r\n        console.log(urstatus)\r\n      },[]);      \r\n    return(\r\n        <>\r\n        {/* history.push('/hdpsc/new') */}\r\n        <CModal\r\n        show={modal}\r\n        onClose={()=>setModal(false)}\r\n        >\r\n            <CModalHeader>\r\n                <h5>Masukkan Data Awal</h5>\r\n            </CModalHeader>\r\n            <CModalBody>               \r\n                <CRow>\r\n                    <CCol md=\"12\">\r\n                        <CFormGroup>\r\n                            <CLabel>Nomor IMO Kapal</CLabel>\r\n                            <CInput value={field.imokapal} name=\"imokapal\" onChange={(e)=>handleChange(e)} type=\"text\"/>\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                </CRow>\r\n                <CRow>\r\n                    <CCol md=\"12\">\r\n                        <CFormGroup>\r\n                            <CLabel>Tanggal Detensi</CLabel>\r\n                            <CInput value={field.tgldetensi} name=\"tgldetensi\" onChange={(e)=>handleChange(e)} type=\"date\"/>\r\n                        </CFormGroup>\r\n                    </CCol>\r\n                </CRow>                \r\n            </CModalBody>\r\n            <CModalFooter>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <div className=\"mr-2\">\r\n                        <CButton onClick={()=>validasiDuplikat()} color=\"success\">Lanjutkan</CButton>\r\n                    </div>\r\n                    <div className=\"mr-2\">\r\n                        <CButton onClick={()=>setModal(false)} color=\"danger\">Batal</CButton>\r\n                    </div>                    \r\n                </div>\r\n            </CModalFooter>\r\n        </CModal>\r\n        <CCard>\r\n            <CCardHeader>\r\n                <h5>Data Detensi Kapal</h5>\r\n            </CCardHeader>          \r\n            <CCardBody>\r\n                {\r\n                    simView == 1 || simView == 2 || simView == 3 ?\r\n                    <>\r\n                        <div className=\"d-flex justify-content-end mb-2\">\r\n                            <CButton onClick={()=>setModal(true)} className=\"btn btn-info\">\r\n                                Buat Baru <i class=\"fas fa-plus\"></i>\r\n                            </CButton>\r\n                        </div>  \r\n                    </>\r\n                    :\r\n                    <></>                                        \r\n                }                \r\n                <CDataTable\r\n                addTableClasses=\"josss\"\r\n                items={data}\r\n                fields={[\r\n                    { key: 'no', label: 'No', _style: { width: '5%'} },\r\n                    { key: 'namakapal', label: 'Nama Kapal' },\r\n                    { key: 'imokapal', label: 'Nomor IMO Kapal' },\r\n                    { key: 'tgldetensi', label: 'Tanggal Detensi' },\r\n                    { key: 'status', label: 'Status' },                    \r\n                    { key: 'action', label: 'Action' }                                        \r\n                ]}\r\n                scopedSlots={{\r\n                    'no':\r\n                    (item, index)=>{\r\n                        return(\r\n                            <td>\r\n                                {index+1}\r\n                            </td>\r\n                        )\r\n                    },\r\n                    'status':\r\n                    (item, index) =>{\r\n                        return(\r\n                            <td>\r\n                                <CBadge onClick={()=>{toggleDetails(index)}} role=\"button\" color={arrWarna[parseInt(item.kd_status)-1]}>\r\n                                    {item.ur_status}                                \r\n                                </CBadge>\r\n                            </td>\r\n                        )\r\n                    },\r\n                    'action':\r\n                    (item, index) =>{\r\n                        return(\r\n                            <td>\r\n                                {\r\n                                    (simView == 1 || simView == 2 || simView == 3) && item.kd_status == 3 ?\r\n                                    <ViewAndCAP datadetensi={item}/>\r\n                                    :                                  \r\n                                    simView == 1 || simView == 2 || simView == 3 ?\r\n                                    <Edit datadetensi={item} />\r\n                                    :\r\n                                    <ViewOnly/>\r\n                                }                                \r\n                            </td>\r\n                        )\r\n                    },\r\n                    'details':\r\n                    (item, index) =>{\r\n                        console.log(item)\r\n                        return(\r\n                            <CCollapse show={details.includes(index)}>\r\n                                {item.histori.map(x=>{\r\n                                    let date = new Date(x.created_at)\r\n                                    let hari = date.getDate()\r\n                                    let bulan = date.getMonth() + 1\r\n                                    let tahun = date.getFullYear()\r\n                                    let jam = date.getHours()\r\n                                    let menit = date.getMinutes()\r\n                                    let detik = date.getSeconds()\r\n                                    return(\r\n                                        <div className=\"d-flex flex-row justify-content-end mx-3 my-3\">\r\n                                            <div className=\"d-flex flex-column justify-content-center mr-2\">\r\n                                                <CBadge color={arrWarna[parseInt(x.kd_status)-1]}>\r\n                                                    {\r\n                                                        x.kd_status == 1 ?\r\n                                                        \"Initial Info\"\r\n                                                        :\r\n                                                        x.kd_status == 2 ?\r\n                                                        \"Cetakan Form A & B\"\r\n                                                        :\r\n                                                        x.kd_status == 3 ?\r\n                                                        \"Data Elektronik Form A & B\"\r\n                                                        :\r\n                                                        x.kd_status == 4 ?\r\n                                                        \"Corrective Action Plan\"\r\n                                                        :\r\n                                                        \"\"\r\n                                                    }                                                    \r\n                                                </CBadge>\r\n                                            </div>\r\n                                            <div style={{minWidth:\"15vw\"}} className=\"d-flex flex-column\">\r\n                                                {hari.toString().length == 1 ? \"0\"+hari : hari}-{bulan.toString().length == 1 ? \"0\"+bulan : bulan}-{tahun}{' '}{jam}:{menit}:{detik}\r\n                                            </div> \r\n                                            <div style={{minWidth:\"15vw\"}} className=\"d-flex flex-column\">\r\n                                                {arrView[parseInt(x.createdby)-1]}\r\n                                            </div>                                                                                \r\n                                        </div>                                        \r\n                                    )\r\n                                })}\r\n                            </CCollapse>                            \r\n                        )\r\n                    }\r\n                }}\r\n                />\r\n            </CCardBody>\r\n        </CCard>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Viavalen"],"sourceRoot":""}